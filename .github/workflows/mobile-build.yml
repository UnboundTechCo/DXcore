name: Mobile Build (Android & iOS)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-mobile:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.7"

      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init

      - name: Make build.sh executable
        run: chmod +x build.sh

      - name: Build Android and iOS
        run: ./build.sh <<< "4"
        working-directory: ${{ github.workspace }}

      - name: Set up Git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Create Tag
        id: create_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --list 'r*' | sort -V | tail -n1)
          if [[ $latest_tag =~ r([0-9]+) ]]; then
            next_tag="r$(( ${BASH_REMATCH[1]} + 1 ))"
          else
            next_tag="r1"
          fi
          echo "TAG_NAME=$next_tag" >> $GITHUB_ENV
            git tag $next_tag
            git push origin $next_tag

      - name: Zip Android build outputs
        run: zip -r build/android/DXcore-android.zip build/android/
        working-directory: ${{ github.workspace }}

      - name: Zip iOS xcframework
        run: zip -r build/ios/IosDXcore.xcframework.zip build/ios/IosDXcore.xcframework
        working-directory: ${{ github.workspace }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "DXcore v${{ env.TAG_NAME }}"
          files: |
            build/android/DXcore-android.zip
            build/ios/IosDXcore.xcframework.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
